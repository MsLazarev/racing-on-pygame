import time
import pygame
from core.GameSprite import GameSprite

class Player(GameSprite):
    def __init__(self, picture, x, y, x_speed, y_speed):
        super().__init__(picture, x, y)
        self.x_speed = x_speed
        self.y_speed = y_speed
    def update(self, start_time):
        #ДРИФТ В ПРАВУЮ СТОРОНУ
        if self.x_speed > 0:
            end_time1 = time.time()
            print(end_time1 - start_time)
            if end_time1 - start_time >= 0.001 and end_time1 - start_time < 0.1:
                self.x_speed = 0.1#0.5
                self.y_speed = -0.5#-1.6
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 355)
            elif end_time1 - start_time >= 0.1 and end_time1 - start_time < 0.27:
                self.x_speed = 0.1#1.2
                self.y_speed = -0.4#-1.3
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 350)
            elif end_time1 - start_time >= 0.27 and end_time1 - start_time < 0.35:
                self.x_speed = 0.1#1.2
                self.y_speed = -0.4#-1.2
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 345)
            elif end_time1 - start_time >= 0.35 and end_time1 - start_time < 0.42:
                self.x_speed = 0.1#1.2
                self.y_speed = -0.3#-1.1
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 340)
            elif end_time1 - start_time >= 0.42 and end_time1 - start_time < 0.5:
                self.x_speed = 0.1#2
                self.y_speed = -0.25#-1
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 335)
            elif end_time1 - start_time >= 0.5 and end_time1 - start_time < 0.6:
                self.x_speed = 0.1#3
                self.y_speed = -0.2#-0.9
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 330)
            elif end_time1 - start_time >= 0.6 and end_time1 - start_time < 0.73:
                self.x_speed = 0.1#3.6
                self.y_speed = -0.2#-0.8
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 320)
            elif end_time1 - start_time >= 0.73 and end_time1 - start_time < 0.9:
                self.x_speed = 0.1#4
                self.y_speed = -0.2#-0.7
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 313)
            elif end_time1 - start_time >= 0.9 and end_time1 - start_time < 1.05:
                self.x_speed = 0.1#4
                self.y_speed = -0.15#-0.4
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 305)
            elif end_time1 - start_time >= 1.05 and end_time1 - start_time < 1.2:
                self.x_speed = 0.1#3
                self.y_speed = -0.1
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 300)
            elif end_time1 - start_time >= 1.2 and end_time1 - start_time < 1.35:
                self.x_speed = 0.1#5
                self.y_speed = -0.3
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 295)
            elif end_time1 - start_time >= 1.35 and end_time1 - start_time < 1.5:
                self.x_speed = 0.1#5
                self.y_speed = -0.5
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 288)
            elif end_time1 - start_time >= 1.5 and end_time1 - start_time < 1.65:
                self.x_speed = 0.1#5
                self.y_speed = -0.4
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 280)
            elif end_time1 - start_time >= 1.65 and end_time1 - start_time < 1.8:
                self.x_speed = 0.1#4
                self.y_speed = -0.4
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 275)
            elif end_time1 - start_time >= 1.8 and end_time1 - start_time < 1.95:
                self.x_speed = 0.1#5
                self.y_speed = -0.3
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 270)
            elif end_time1 - start_time >= 1.95 and end_time1 - start_time < 2.1:
                self.x_speed = 0.1#4.6
                self.y_speed = 0.1
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 265)
            elif end_time1 - start_time >= 2.1 and end_time1 - start_time < 2.25:
                self.x_speed = 0.1#4.7
                self.y_speed = 0.2
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 260)
            elif end_time1 - start_time >= 2.25 and end_time1 - start_time < 2.4:
                self.x_speed = 0.1#4.8
                self.y_speed = 0.3
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 250)
            elif end_time1 - start_time >= 2.4 and end_time1 - start_time < 2.7:
                self.x_speed = 0.1#5
                self.y_speed = 0.5
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 240)
            elif end_time1 - start_time >= 2.7:# and end_time1 - start_time < 2.:
                self.x_speed = 0.1#5
                self.y_speed = 0.7
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 240)
            else:
                pass

        #ДРИФТА В ЛЕВУЮ СТОРОНУ
        if self.x_speed < 0:
            end_time1 = time.time()
            if end_time1 - start_time >= 0.001 and end_time1 - start_time < 0.1:
                self.x_speed = -0.5
                self.y_speed = -0.5#-1.5
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 5)
            elif end_time1 - start_time >= 0.1 and end_time1 - start_time < 0.27:
                self.x_speed = -1.2
                self.y_speed = -0.4
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 10)
            elif end_time1 - start_time >= 0.27 and end_time1 - start_time < 0.35:
                self.x_speed = -1.2
                self.y_speed = -0.4#-1.2
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 15)
            elif end_time1 - start_time >= 0.35 and end_time1 - start_time < 0.42:
                self.x_speed = -1.2
                self.y_speed = -0.3#-1.1
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 20)
            elif end_time1 - start_time >= 0.42 and end_time1 - start_time < 0.5:
                self.x_speed = -2
                self.y_speed = -0.25#-1
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 25)
            elif end_time1 - start_time >= 0.5 and end_time1 - start_time < 0.6:
                self.x_speed = -3
                self.y_speed = -0.2#-0.9
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 30)
            elif end_time1 - start_time >= 0.6 and end_time1 - start_time < 0.73:
                self.x_speed = -3.6
                self.y_speed = -0.2#-0.8
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 40)
            elif end_time1 - start_time >= 0.73 and end_time1 - start_time < 0.9:
                self.x_speed = -4
                self.y_speed = -0.15
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 47)
            elif end_time1 - start_time >= 0.9 and end_time1 - start_time < 1.05:
                self.x_speed = -4
                self.y_speed = -0.15
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 55)
            elif end_time1 - start_time >= 1.05 and end_time1 - start_time < 1.2:
                self.x_speed = -3
                self.y_speed = -0.1
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 60)
            elif end_time1 - start_time >= 1.2 and end_time1 - start_time < 1.35:
                self.x_speed = -5
                self.y_speed = -0.3
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 65)
            elif end_time1 - start_time >= 1.35 and end_time1 - start_time < 1.5:
                self.x_speed = -5
                self.y_speed = -0.5
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 72)
            elif end_time1 - start_time >= 1.5 and end_time1 - start_time < 1.65:
                self.x_speed = -5
                self.y_speed = -0.4
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 80)
            elif end_time1 - start_time >= 1.65 and end_time1 - start_time < 1.8:
                self.x_speed = -4
                self.y_speed = -0.4
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 85)
            elif end_time1 - start_time >= 1.8 and end_time1 - start_time < 1.95:
                self.x_speed = -3.5
                self.y_speed = -0.3
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 90)
            elif end_time1 - start_time >= 1.95 and end_time1 - start_time < 2.1:
                self.x_speed = -4.6
                self.y_speed = 0.1
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 95)
            elif end_time1 - start_time >= 2.1 and end_time1 - start_time < 2.25:
                self.x_speed = -4.7
                self.y_speed = 0.2
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 100)
            elif end_time1 - start_time >= 2.25 and end_time1 - start_time < 2.4:
                self.x_speed = -4.8
                self.y_speed = 0.3
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 110)
            elif end_time1 - start_time >= 2.4 and end_time1 - start_time < 2.7:
                self.x_speed = -5
                self.y_speed = 0.5
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 120)
            elif end_time1 - start_time >= 2.7:# and end_time1 - start_time < 2.:
                self.x_speed = -5
                self.y_speed = 0.7
                self.rect.y += self.y_speed
                self.image = pygame.transform.rotate(self.image, 130)
            else:
                pass
        self.rect.x += self.x_speed
        if self.y_speed > 0:
            end_time = time.time()
            if end_time - start_time >= 0.001 and end_time - start_time < 0.3:
                self.y_speed = 1
                self.rect.y += self.y_speed
            elif end_time - start_time >= 0.3 and end_time - start_time < 0.5:
                self.y_speed = 3.5
                self.rect.y += self.y_speed
            elif end_time - start_time >= 0.5:# and end_time - start_time < 0.7:
                self.y_speed = 2.9
                self.rect.y += self.y_speed
            #elif end_time - start_time >= 1:
            #    self.y_speed = 4
            #    self.rect.y += self.y_speed
            else:
                pass